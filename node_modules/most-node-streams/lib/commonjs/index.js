"use strict";
var most_1 = require("most");
var FromStream_1 = require("./FromStream");
function fromStream(nodeStream, options) {
    if (options === void 0) { options = {}; }
    var _a = options.endEventName, endEventName = _a === void 0 ? 'end' : _a, _b = options.dataEventName, dataEventName = _b === void 0 ? 'data' : _b;
    if (typeof nodeStream.pause === 'function')
        nodeStream.pause();
    return new most_1.Stream(new FromStream_1.FromStream(nodeStream, endEventName, dataEventName));
}
exports.fromStream = fromStream;
function fromReadable(nodeStream, dataEventName) {
    if (dataEventName === void 0) { dataEventName = 'data'; }
    return fromStream(nodeStream, { dataEventName: dataEventName, endEventName: 'end' });
}
exports.fromReadable = fromReadable;
function fromWritable(nodeStream) {
    return fromStream(nodeStream, { endEventName: 'finish' });
}
exports.fromWritable = fromWritable;
function toWritable(nodeStream, stream) {
    return stream.subscribe({
        next: function (x) {
            nodeStream.write(x);
        },
        error: function (e) {
            nodeStream.emit('error', e);
        },
        complete: function () {
            // process.stdout && process.stderr are not closable
            if (!nodeStream.isStdio) {
                nodeStream.end();
            }
        },
    });
}
exports.toWritable = toWritable;
//# sourceMappingURL=index.js.map