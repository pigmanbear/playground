import { PropagateTask } from 'most';
export function addListeners(stream, endEventName, dataEventName, sink, scheduler) {
    const event = (value) => scheduler.asap(PropagateTask.event(value, sink));
    const error = (err) => scheduler.asap(PropagateTask.error(err, sink));
    const end = (value) => scheduler.asap(PropagateTask.end(value, sink));
    stream.addListener(dataEventName, event);
    stream.addListener(endEventName, end);
    stream.addListener('error', error);
    return {
        dispose() {
            stream.removeListener(dataEventName, event);
            stream.removeListener(endEventName, end);
            stream.removeListener('error', error);
        },
    };
}
//# sourceMappingURL=addListeners.js.map